export interface Scramble {
    state?: string;
    scramble_string: string | '';
}
export interface Seed {
    random: () => number;
}
interface Scrambler {
    version?: string;
    initialize: (randomSource: Seed) => Function | void;
    setRandomSource: (randomSource: Seed) => void;
    getRandomScramble: (args?: string[]) => Scramble;
    setScrambleLength: (length: number) => void;
}
declare type ScramblerAliases = Record<string, string>;
declare type Scramblers = Record<string, Scrambler>;
export declare const aliases: ScramblerAliases;
export declare const scramblers: Scramblers;
export {};
